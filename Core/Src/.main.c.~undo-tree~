(undo-tree-save-format-version . 1)
"ddb9c6ba4326ecc8732d13c9bfe3a3b321317f6a"
[nil nil nil nil (26179 19434 422378 998000) 0 nil]
([nil nil ((nil rear-nonsticky nil 1002 . 1003) (nil fontified nil 986 . 1003) (nil fontified nil 985 . 986) (985 . 1003) (t 26179 18920 78000 0)) nil (26179 19434 422368 966000) 0 nil])
([nil nil ((2650 . 2652) (#("  " 0 2 (fontified nil c-is-sws t c-in-sws t)) . 2649) (undo-tree-id0 . -2) (2648 . 2652) (t 26179 19434 430972 374000)) nil (26179 19454 111546 562000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2684 . 2685) (nil fontified nil 2653 . 2685) (nil fontified nil 2652 . 2653) (nil fontified nil 2649 . 2652) (2649 . 2685)) nil (26179 19454 111490 57000) 0 nil])
([nil nil ((2685 . 2687) (t 26179 19454 145465 27000)) nil (26179 19461 68306 20000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2834 . 2835) (nil fontified nil 2819 . 2835) (nil fontified nil 2818 . 2819) (nil fontified nil 2815 . 2818) (nil fontified nil 2814 . 2815) (2814 . 2835)) nil (26179 19461 68278 204000) 0 nil])
([nil nil ((apply -12 2649 2702 undo--wrap-and-run-primitive-undo 2649 2702 ((2693 . 2696) (2674 . 2677) (2668 . 2671) (2652 . 2655) 2649)) (t 26179 19461 76870 673000)) nil (26179 19761 271343 462000) 0 nil])
([nil nil ((985 . 986)) nil (26179 19761 271340 61000) 0 nil])
([nil nil ((985 . 987) (#("#" 0 1 (fontified t c-is-sws t)) . -985) (undo-tree-id1 . -1) 986) nil (26179 19761 271329 845000) 0 nil])
([nil nil ((#("    printf(\"Test\\n\");" 0 1 (c-is-sws t c-in-sws t) 1 4 (c-is-sws t c-in-sws t) 4 5 (c-is-sws t) 10 11 (face (rainbow-delimiters-depth-3-face)) 11 19 (face font-lock-string-face) 19 20 (face (rainbow-delimiters-depth-3-face)) 20 21 (rear-nonsticky t)) . 2828) (t 26179 19761 307611 153000)) nil (26179 20288 60777 340000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t face font-lock-comment-delimiter-face c-is-sws t)) . 985) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (t 26179 19998 587000 0)) nil (26179 20288 60771 314000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t c-is-sws t)) . 985) (undo-tree-id2 . -1) (undo-tree-id3 . -1)) nil (26179 20288 60723 795000) 0 nil])
([nil nil ((apply 12 2650 2686 undo--wrap-and-run-primitive-undo 2650 2686 ((#(" */" 0 3 (fontified t face font-lock-comment-delimiter-face)) . 2684) (#("/* " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2668) (#(" */" 0 3 (fontified t face font-lock-comment-delimiter-face)) . 2665) (#("/* " 0 1 (fontified t face font-lock-comment-delimiter-face) 1 3 (fontified t face font-lock-comment-delimiter-face)) . -2652) 2650)) (t 26179 20288 69521 770000)) nil (26179 20296 950505 50000) 0 nil])
([nil nil ((apply -12 2650 2698 undo--wrap-and-run-primitive-undo 2650 2698 ((2693 . 2696) (2674 . 2677) (2668 . 2671) (2652 . 2655) 2650)) (t 26179 20296 958911 693000)) nil (26179 20341 835447 64000) 0 nil])
([nil nil ((1001 . 1004) (#("h" 0 1 (fontified t face font-lock-string-face c-in-sws t)) . -1001) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) 1002 (t 26179 20341 869921 797000)) nil (26179 20410 480367 940000) 0 nil])
([nil nil ((#("cpp" 0 1 (fontified t c-in-sws t face font-lock-string-face) 1 2 (fontified t c-in-sws t face font-lock-string-face) 2 3 (fontified t c-in-sws t face font-lock-string-face)) . 1001) (undo-tree-id26 . -2) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -2) (undo-tree-id33 . -2) (undo-tree-id34 . -2) (undo-tree-id35 . -2) (undo-tree-id36 . -2) (undo-tree-id37 . -3) (undo-tree-id38 . -3) (undo-tree-id39 . -3) (undo-tree-id40 . -3) (undo-tree-id41 . -3) (undo-tree-id42 . -2) (undo-tree-id43 . -2) (undo-tree-id44 . -2) (undo-tree-id45 . -2) (undo-tree-id46 . -2) (undo-tree-id47 . -2) (undo-tree-id48 . -2) (undo-tree-id49 . -2) (undo-tree-id50 . -2) (undo-tree-id51 . -2) (undo-tree-id52 . -2) (undo-tree-id53 . -2) (undo-tree-id54 . -2) (undo-tree-id55 . -2) (undo-tree-id56 . -2) (undo-tree-id57 . -2) (undo-tree-id58 . -2) (undo-tree-id59 . -2) (undo-tree-id60 . -2) (undo-tree-id61 . -2) (undo-tree-id62 . -2) (undo-tree-id63 . -2) (undo-tree-id64 . -2) (undo-tree-id65 . -2) (undo-tree-id66 . -2) (undo-tree-id67 . -2) (undo-tree-id68 . -2) (undo-tree-id69 . -2) (undo-tree-id70 . -2) (undo-tree-id71 . -2) (undo-tree-id72 . -2) (undo-tree-id73 . -2) (undo-tree-id74 . -2) (undo-tree-id75 . -2) (undo-tree-id76 . -2) (undo-tree-id77 . -2) (undo-tree-id78 . -2) (undo-tree-id79 . -2) (undo-tree-id80 . -2) (undo-tree-id81 . -2) (undo-tree-id82 . -2) (undo-tree-id83 . -2) (undo-tree-id84 . -3)) nil (26179 20410 480348 554000) 0 nil])
([nil nil ((1001 . 1002)) nil (26179 20410 480194 617000) 0 nil])
([nil current ((apply 12 2651 2687 undo--wrap-and-run-primitive-undo 2651 2687 ((#(" */" 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . 2684) (#("/* " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -2668) (#(" */" 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . 2665) (#("/* " 0 1 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -2652) 2651)) (t 26179 20410 519388 532000)) nil (26179 20544 640959 59000) 0 nil])
nil
